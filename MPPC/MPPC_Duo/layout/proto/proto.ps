%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.1-20100214-22-ga30f00b
%%CreationDate: Tue Apr  8 16:43:30 2014
%%Title: /Users/runic/Documents/Uni Krams/Master/MPPC_D2/layout/proto/proto.sch
%%Author: runic
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 500 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
gsave
gsave
false true false false 260.000000 [(ATmega88) (PA) ] 0 49100 47800 180.555557 text
grestore
49500 46100 49200 46100 10 line
gsave
false false false false 208.000000 [(29) ] 0 49300 46150 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(RESET\) PC6) ] 0 49150 46100 144.444443 text
grestore
46900 48100 47200 48100 10 line
gsave
false true false false 208.000000 [(30) ] 0 47100 48150 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD0 \(RxD\)) ] 0 47250 48100 144.444443 text
grestore
46900 47900 47200 47900 10 line
gsave
false true false false 208.000000 [(31) ] 0 47100 47950 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD1 \(TxD\)) ] 0 47250 47900 144.444443 text
grestore
46900 47700 47200 47700 10 line
gsave
false true false false 208.000000 [(32) ] 0 47100 47750 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD2 \(INT0\)) ] 0 47250 47700 144.444443 text
grestore
46900 47500 47200 47500 10 line
gsave
false true false false 208.000000 [(1) ] 0 47100 47550 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD3 \(INT1\)) ] 0 47250 47500 144.444443 text
grestore
46900 47300 47200 47300 10 line
gsave
false true false false 208.000000 [(2) ] 0 47100 47350 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD4 \(XCK/T0\)) ] 0 47250 47300 144.444443 text
grestore
46900 44200 47200 44200 10 line
gsave
false true false false 208.000000 [(7) ] 0 47100 44250 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB6 \(XTAL1/OSC1\)) ] 0 47250 44200 144.444443 text
grestore
46900 44000 47200 44000 10 line
gsave
false true false false 208.000000 [(8) ] 0 47100 44050 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB7 \(XTAL2/TOSC2\)) ] 0 47250 44000 144.444443 text
grestore
46900 47100 47200 47100 10 line
gsave
false true false false 208.000000 [(9) ] 0 47100 47150 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD5 \(T1\)) ] 0 47250 47100 144.444443 text
grestore
46900 46900 47200 46900 10 line
gsave
false true false false 208.000000 [(10) ] 0 47100 46950 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD6 \(AIN0\)) ] 0 47250 46900 144.444443 text
grestore
46900 46700 47200 46700 10 line
gsave
false true false false 208.000000 [(11) ] 0 47100 46750 144.444443 text
grestore
gsave
false false false false 208.000000 [(PD7 \(AIN1\)) ] 0 47250 46700 144.444443 text
grestore
46900 45400 47200 45400 10 line
gsave
false true false false 208.000000 [(12) ] 0 47100 45450 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB0 \(ICP1\)) ] 0 47250 45400 144.444443 text
grestore
47200 45200 46900 45200 10 line
gsave
false true false false 208.000000 [(13) ] 0 47100 45250 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB1 \(OC1A\)) ] 0 47250 45200 144.444443 text
grestore
47200 45000 46900 45000 10 line
gsave
false true false false 208.000000 [(14) ] 0 47100 45050 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB2 \(SS/OC1B\)) ] 0 47250 45000 144.444443 text
grestore
47200 44800 46900 44800 10 line
gsave
false true false false 208.000000 [(15) ] 0 47100 44850 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB3 \(MOSI/OC2\)) ] 0 47250 44800 144.444443 text
grestore
47200 44600 46900 44600 10 line
gsave
false true false false 208.000000 [(16) ] 0 47100 44650 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB4 \(MISO\)) ] 0 47250 44600 144.444443 text
grestore
47200 44400 46900 44400 10 line
gsave
false true false false 208.000000 [(17) ] 0 47100 44450 144.444443 text
grestore
gsave
false false false false 208.000000 [(PB5 \(SCK\)) ] 0 47250 44400 144.444443 text
grestore
49200 44800 49500 44800 10 line
gsave
false false false false 208.000000 [(18) ] 0 49300 44850 144.444443 text
grestore
gsave
false true false false 208.000000 [(AVCC) ] 0 49150 44800 144.444443 text
grestore
49200 45100 49500 45100 10 line
gsave
false false false false 208.000000 [(20) ] 0 49300 45150 144.444443 text
grestore
gsave
false true false false 208.000000 [(AREF) ] 0 49150 45100 144.444443 text
grestore
49200 47300 49500 47300 10 line
gsave
false false false false 208.000000 [(23) ] 0 49300 47350 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC0\) PC0) ] 0 49150 47300 144.444443 text
grestore
49200 47100 49500 47100 10 line
gsave
false false false false 208.000000 [(24) ] 0 49300 47150 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC1\) PC1) ] 0 49150 47100 144.444443 text
grestore
49200 46900 49500 46900 10 line
gsave
false false false false 208.000000 [(25) ] 0 49300 46950 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC2\) PC2) ] 0 49150 46900 144.444443 text
grestore
49200 46700 49500 46700 10 line
gsave
false false false false 208.000000 [(26) ] 0 49300 46750 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC3\) PC3) ] 0 49150 46700 144.444443 text
grestore
49200 46500 49500 46500 10 line
gsave
false false false false 208.000000 [(27) ] 0 49300 46550 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC4/SDA\) PC4) ] 0 49150 46500 144.444443 text
grestore
49200 46300 49500 46300 10 line
gsave
false false false false 208.000000 [(28) ] 0 49300 46350 144.444443 text
grestore
gsave
false true false false 208.000000 [(\(ADC5/SCL\) PC5) ] 0 49150 46300 144.444443 text
grestore
47200 43900 49200 43900 10 line
49200 43900 49200 48300 10 line
49200 48300 47200 48300 10 line
47200 48300 47200 43900 10 line
49200 45700 49500 45700 10 line
gsave
false false false false 208.000000 [(19) ] 0 49300 45750 144.444443 text
grestore
gsave
false true false false 208.000000 [(ADC6) ] 0 49150 45700 144.444443 text
grestore
49200 45500 49500 45500 10 line
gsave
false false false false 208.000000 [(22) ] 0 49300 45550 144.444443 text
grestore
gsave
false true false false 208.000000 [(ADC7) ] 0 49150 45500 144.444443 text
grestore
grestore
gsave
false true false false 260.000000 [(U0) ] 0 49200 48400 180.555557 text
grestore
49500 46300 53700 46300 10 line
gsave
false false false false 208.000000 [(SCL) ] 0 50300 46300 144.444443 text
grestore
49500 46500 53000 46500 10 line
gsave
false false false false 208.000000 [(SDA) ] 0 50300 46500 144.444443 text
grestore
gsave
50900 46500 50900 46700 10 line
50800 46800 50900 46700 10 line
50900 46700 51000 46800 10 line
50800 46800 50900 46900 10 line
50900 46900 51000 46800 10 line
newpath
50900 46500
25
0 360 arc
fill
newpath
50900 46500
25
0 360 arc
fill
grestore
gsave
false false false false 208.000000 [(TP_SDA) ] 0 51000 46900 144.444443 text
grestore
gsave
50900 46300 50900 46100 10 line
51000 46000 50900 46100 10 line
50900 46100 50800 46000 10 line
51000 46000 50900 45900 10 line
50900 45900 50800 46000 10 line
newpath
50900 46300
25
0 360 arc
fill
newpath
50900 46300
25
0 360 arc
fill
grestore
gsave
false false false false 208.000000 [(TP_SCL) ] 0 51000 45800 144.444443 text
grestore
49500 45100 49800 45100 10 line
49800 45100 49800 44800 10 line
49500 44800 50100 44800 10 line
gsave
50100 44800 50300 44800 10 line
50300 44950 50300 44650 10 line
gsave
false false false false 208.000000 [(Vcc) ] 270 50350 44925 144.444443 text
grestore
grestore
42600 42700 41500 42700 10 line
gsave
false false false false 260.000000 [(MISO) ] 0 41700 42700 180.555557 text
grestore
40700 42300 42600 42300 10 line
gsave
false false false false 260.000000 [(VCC) ] 0 41700 42300 180.555557 text
grestore
42600 41900 41500 41900 10 line
gsave
false false false false 260.000000 [(SCK) ] 0 41700 41900 180.555557 text
grestore
42600 41500 41500 41500 10 line
gsave
false false false false 260.000000 [(MOSI) ] 0 41700 41500 180.555557 text
grestore
40700 41100 42600 41100 10 line
gsave
false false false false 260.000000 [(/RES) ] 0 41700 41100 180.555557 text
grestore
42600 40700 41700 40700 10 line
gsave
false false false false 260.000000 [(GND) ] 0 41700 40700 180.555557 text
grestore
50100 46100 49500 46100 10 line
gsave
false false false false 208.000000 [(/RES) ] 0 49600 46100 144.444443 text
grestore
gsave
40700 40300 40700 40500 10 line
40600 40300 40800 40300 10 line
40655 40250 40745 40250 10 line
40680 40210 40720 40210 10 line
grestore
gsave
40800 40700 41000 40700 10 line
41700 40700 41500 40700 10 line
41200 40900 41200 40500 10 line
41300 40900 41300 40500 10 line
41500 40700 41300 40700 10 line
41200 40700 41000 40700 10 line
grestore
gsave
false false false false 260.000000 [(CBP_VCC) ] 0 41450 40250 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 0 41450 40050 180.555557 text
grestore
gsave
40600 41800 40800 41700 10 line
40800 41700 40600 41600 10 line
40600 41600 40800 41500 10 line
40800 41500 40600 41400 10 line
40600 41800 40800 41900 10 line
40800 41900 40700 41950 10 line
40700 42100 40700 41950 10 line
40700 41200 40700 41352 10 line
40600 41401 40700 41350 10 line
grestore
gsave
false false false false 260.000000 [(RPU_RES) ] 90 40300 41450 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 90 40500 41450 180.555557 text
grestore
40700 40500 40700 41200 10 line
40800 40700 40700 40700 10 line
40700 42100 40700 42900 10 line
gsave
40700 42900 40700 43100 10 line
40550 43100 40850 43100 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 40575 43150 144.444443 text
grestore
grestore
46500 42700 45400 42700 10 line
gsave
false false false false 260.000000 [(VBIN) ] 0 45600 42700 180.555557 text
grestore
46500 42300 45400 42300 10 line
gsave
false false false false 260.000000 [(VEE) ] 0 45600 42300 180.555557 text
grestore
46500 41900 45400 41900 10 line
gsave
false false false false 260.000000 [(VCC) ] 0 45600 41900 180.555557 text
grestore
46500 41500 45400 41500 10 line
gsave
false false false false 260.000000 [(GND) ] 0 45600 41500 180.555557 text
grestore
46500 41100 45400 41100 10 line
gsave
false false false false 260.000000 [(RTX+) ] 0 45600 41100 180.555557 text
grestore
46500 40700 45400 40700 10 line
gsave
false false false false 260.000000 [(RTX-) ] 0 45600 40700 180.555557 text
grestore
gsave
45200 41500 45400 41500 10 line
45200 41600 45200 41400 10 line
45150 41545 45150 41455 10 line
45110 41520 45110 41480 10 line
grestore
gsave
45400 41900 45200 41900 10 line
45200 41750 45200 42050 10 line
gsave
false false false false 208.000000 [(Vcc) ] 90 45150 41775 144.444443 text
grestore
grestore
gsave
45400 42300 45200 42300 10 line
45200 42150 45200 42450 10 line
gsave
false false false false 208.000000 [(Vee) ] 90 45150 42175 144.444443 text
grestore
grestore
46900 44600 45800 44600 10 line
gsave
false false false false 260.000000 [(MISO) ] 0 46000 44600 180.555557 text
grestore
46900 44400 45800 44400 10 line
gsave
false false false false 260.000000 [(SCK) ] 0 46000 44400 180.555557 text
grestore
46900 44800 45800 44800 10 line
gsave
false false false false 260.000000 [(MOSI) ] 0 46000 44800 180.555557 text
grestore
gsave
42600 42700 42800 42700 10 line
gsave
false false false false 208.000000 [(1) ] 0 42950 42700 144.444443 text
grestore
42850 42700 50 0 360 10 darc
42600 42300 42800 42300 10 line
gsave
false false false false 208.000000 [(2) ] 0 42950 42300 144.444443 text
grestore
42850 42300 50 0 360 10 darc
42600 41900 42800 41900 10 line
gsave
false false false false 208.000000 [(3) ] 0 42950 41900 144.444443 text
grestore
42850 41900 50 0 360 10 darc
42600 41500 42800 41500 10 line
gsave
false false false false 208.000000 [(4) ] 0 42950 41500 144.444443 text
grestore
42850 41500 50 0 360 10 darc
42600 41100 42800 41100 10 line
gsave
false false false false 208.000000 [(5) ] 0 42950 41100 144.444443 text
grestore
42850 41100 50 0 360 10 darc
42600 40700 42800 40700 10 line
gsave
false false false false 208.000000 [(6) ] 0 42950 40700 144.444443 text
grestore
42850 40700 50 0 360 10 darc
42900 40300 43300 40300 10 line
43300 40300 43300 43100 10 line
43300 43100 42900 43100 10 line
42900 43100 42900 40300 10 line
grestore
gsave
false true false false 260.000000 [(CONN_ISP) ] 0 43300 43200 180.555557 text
grestore
gsave
46500 42700 46700 42700 10 line
gsave
false false false false 208.000000 [(1) ] 0 46850 42700 144.444443 text
grestore
46750 42700 50 0 360 10 darc
46500 42300 46700 42300 10 line
gsave
false false false false 208.000000 [(2) ] 0 46850 42300 144.444443 text
grestore
46750 42300 50 0 360 10 darc
46500 41900 46700 41900 10 line
gsave
false false false false 208.000000 [(3) ] 0 46850 41900 144.444443 text
grestore
46750 41900 50 0 360 10 darc
46500 41500 46700 41500 10 line
gsave
false false false false 208.000000 [(4) ] 0 46850 41500 144.444443 text
grestore
46750 41500 50 0 360 10 darc
46500 41100 46700 41100 10 line
gsave
false false false false 208.000000 [(5) ] 0 46850 41100 144.444443 text
grestore
46750 41100 50 0 360 10 darc
46500 40700 46700 40700 10 line
gsave
false false false false 208.000000 [(6) ] 0 46850 40700 144.444443 text
grestore
46750 40700 50 0 360 10 darc
46800 40300 47200 40300 10 line
47200 40300 47200 43100 10 line
47200 43100 46800 43100 10 line
46800 43100 46800 40300 10 line
grestore
gsave
false true false false 260.000000 [(CONN_HV_AND_SLOW_CONTROL) ] 0 47200 43200 180.555557 text
grestore
gsave
gsave
false true false false 260.000000 [(MAX13430E) ] 0 43500 48600 180.555557 text
grestore
44000 48400 43800 48400 10 line
gsave
false true false false 208.000000 [(VL) ] 0 43745 48395 144.444443 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 43895 48445 180.555557 text
grestore
44000 48100 43800 48100 10 line
gsave
false true false false 208.000000 [(RO) ] 0 43745 48095 144.444443 text
grestore
gsave
false false false false 260.000000 [(2) ] 0 43895 48145 180.555557 text
grestore
44000 47800 43800 47800 10 line
gsave
false true false false 208.000000 [(DE) ] 0 43745 47795 144.444443 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 43895 47845 180.555557 text
grestore
44000 47500 43800 47500 10 line
gsave
false true false false 208.000000 [(/RE) ] 0 43745 47495 144.444443 text
grestore
gsave
false false false false 260.000000 [(4) ] 0 43895 47545 180.555557 text
grestore
44000 47200 43800 47200 10 line
gsave
false true false false 208.000000 [(DI) ] 0 43745 47195 144.444443 text
grestore
gsave
false false false false 260.000000 [(5) ] 0 43895 47245 180.555557 text
grestore
42000 48400 42200 48400 10 line
gsave
false false false false 208.000000 [(VCC) ] 0 42245 48395 144.444443 text
grestore
gsave
false true false false 260.000000 [(10) ] 0 42105 48445 180.555557 text
grestore
42000 48100 42200 48100 10 line
gsave
false false false false 208.000000 [(B) ] 0 42245 48095 144.444443 text
grestore
gsave
false true false false 260.000000 [(9) ] 0 42105 48145 180.555557 text
grestore
42000 47800 42200 47800 10 line
gsave
false false false false 208.000000 [(A) ] 0 42245 47795 144.444443 text
grestore
gsave
false true false false 260.000000 [(8) ] 0 42105 47845 180.555557 text
grestore
42000 47500 42200 47500 10 line
gsave
false false false false 208.000000 [(N.C.) ] 0 42245 47495 144.444443 text
grestore
gsave
false true false false 260.000000 [(7) ] 0 42105 47545 180.555557 text
grestore
42000 47200 42200 47200 10 line
gsave
false false false false 208.000000 [(GND) ] 0 42245 47195 144.444443 text
grestore
gsave
false true false false 260.000000 [(6) ] 0 42105 47245 180.555557 text
grestore
42200 47100 43800 47100 10 line
43800 47100 43800 48800 10 line
43800 48800 42200 48800 10 line
42200 48800 42200 47100 10 line
grestore
gsave
false true false false 260.000000 [(U1) ] 0 43105 47900 180.555557 text
grestore
46900 48100 44000 48100 10 line
46900 47900 44500 47900 10 line
44500 47900 44500 47200 10 line
44500 47200 44000 47200 10 line
44000 47800 44200 47800 10 line
44200 47800 44200 47500 10 line
44000 47500 46900 47500 10 line
44000 48400 44200 48400 10 line
44200 48400 44200 49000 10 line
44200 49000 41800 49000 10 line
41800 48400 41800 49300 10 line
41800 48400 42000 48400 10 line
gsave
44200 48400 44400 48400 10 line
45100 48400 44900 48400 10 line
44600 48600 44600 48200 10 line
44700 48600 44700 48200 10 line
44900 48400 44700 48400 10 line
44600 48400 44400 48400 10 line
grestore
gsave
false false false false 260.000000 [(CBP_VL) ] 0 44850 48750 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 0 44850 48550 180.555557 text
grestore
gsave
45500 48400 45300 48400 10 line
45500 48300 45500 48500 10 line
45550 48355 45550 48445 10 line
45590 48380 45590 48420 10 line
grestore
45300 48400 45100 48400 10 line
gsave
41800 49300 41800 49500 10 line
41650 49500 41950 49500 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 41675 49550 144.444443 text
grestore
grestore
gsave
41800 46800 41800 47000 10 line
41700 46800 41900 46800 10 line
41755 46750 41845 46750 10 line
41780 46710 41820 46710 10 line
grestore
41800 47200 42000 47200 10 line
41800 47000 41800 47200 10 line
42000 48100 40300 48100 10 line
gsave
false false false false 260.000000 [(RTX-) ] 0 40400 48100 180.555557 text
grestore
42000 47800 40300 47800 10 line
gsave
false false false false 260.000000 [(RTX+) ] 0 40400 47800 180.555557 text
grestore
gsave
40900 47300 41100 47200 10 line
41100 47200 40900 47100 10 line
40900 47100 41100 47000 10 line
41100 47000 40900 46900 10 line
40900 47300 41100 47400 10 line
41100 47400 41000 47450 10 line
41000 47600 41000 47450 10 line
41000 46700 41000 46852 10 line
40900 46901 41000 46850 10 line
grestore
gsave
false false false false 260.000000 [(R_RTX) ] 0 40250 47200 180.555557 text
grestore
gsave
false false false false 260.000000 [(120) ] 0 40250 47000 180.555557 text
grestore
41000 47600 41000 47800 10 line
41000 46700 41000 46500 10 line
41000 46500 41400 46500 10 line
41400 46500 41400 48100 10 line
45200 46300 44800 46300 10 line
gsave
43900 46300 44100 46300 10 line
44800 46300 44600 46300 10 line
44300 46400 44400 46300 10 line
44400 46300 44300 46200 10 line
44300 46400 44300 46200 10 line
44400 46400 44400 46200 10 line
44400 46300 44600 46300 10 line
44300 46300 44100 46300 10 line
44330 46440 44430 46540 10 line
44430 46540 44380 46510 10 line
44430 46540 44400 46490 10 line
44400 46440 44500 46540 10 line
44500 46540 44450 46510 10 line
44500 46540 44470 46490 10 line
grestore
gsave
false false false false 260.000000 [(LED_ST) ] 0 44100 45900 180.555557 text
grestore
gsave
43300 46200 43400 46400 10 line
43400 46400 43500 46200 10 line
43500 46200 43600 46400 10 line
43600 46400 43700 46200 10 line
43300 46200 43200 46400 10 line
43200 46400 43150 46300 10 line
43000 46300 43150 46300 10 line
43900 46300 43748 46300 10 line
43699 46200 43750 46300 10 line
grestore
gsave
false false false false 260.000000 [(R_LED) ] 0 43150 45900 180.555557 text
grestore
gsave
false false false false 260.000000 [(1k) ] 0 43150 45700 180.555557 text
grestore
gsave
43000 46300 42800 46300 10 line
42800 46150 42800 46450 10 line
gsave
false false false false 208.000000 [(Vcc) ] 90 42750 46175 144.444443 text
grestore
grestore
gsave
42000 47500 41800 47500 10 line
41800 47400 41800 47600 10 line
gsave
false true true false 260.000000 [(NC) ] 0 41750 47500 180.555557 text
grestore
grestore
gsave
false false false false 260.000000 [(MPPC_S Prototype) ] 0 50000 40700 180.555557 text
grestore
gsave
false false false false 260.000000 [(proto.sch) ] 0 50000 40400 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 50000 40100 180.555557 text
grestore
gsave
false false false false 260.000000 [(1) ] 0 53900 40400 180.555557 text
grestore
gsave
false false false false 260.000000 [(Weinstock, Lars Steffen, BSc RWTH) ] 0 53900 40100 180.555557 text
grestore
gsave
gsave
false false false false 260.000000 [(MCP9808) ] 0 54100 46800 180.555557 text
grestore
53700 46600 53900 46600 10 line
gsave
false false false false 208.000000 [(SDA) ] 0 53955 46595 144.444443 text
grestore
gsave
false true false false 260.000000 [(1) ] 0 53805 46645 180.555557 text
grestore
53700 46300 53900 46300 10 line
gsave
false false false false 208.000000 [(SCL) ] 0 53955 46295 144.444443 text
grestore
gsave
false true false false 260.000000 [(2) ] 0 53805 46345 180.555557 text
grestore
53700 46000 53900 46000 10 line
gsave
false false false false 208.000000 [(Alert) ] 0 53955 45995 144.444443 text
grestore
gsave
false true false false 260.000000 [(3) ] 0 53805 46045 180.555557 text
grestore
53700 45700 53900 45700 10 line
gsave
false false false false 208.000000 [(GND) ] 0 53955 45695 144.444443 text
grestore
gsave
false true false false 260.000000 [(4) ] 0 53805 45745 180.555557 text
grestore
55300 46600 55100 46600 10 line
gsave
false true false false 208.000000 [(VDD) ] 0 55055 46595 144.444443 text
grestore
gsave
false false false false 260.000000 [(8) ] 0 55195 46645 180.555557 text
grestore
55300 46300 55100 46300 10 line
gsave
false true false false 208.000000 [(A0) ] 0 55055 46295 144.444443 text
grestore
gsave
false false false false 260.000000 [(7) ] 0 55195 46345 180.555557 text
grestore
55300 46000 55100 46000 10 line
gsave
false true false false 208.000000 [(A1) ] 0 55055 45995 144.444443 text
grestore
gsave
false false false false 260.000000 [(6) ] 0 55195 46045 180.555557 text
grestore
55300 45700 55100 45700 10 line
gsave
false true false false 208.000000 [(A2) ] 0 55055 45695 144.444443 text
grestore
gsave
false false false false 260.000000 [(5) ] 0 55195 45745 180.555557 text
grestore
53900 45600 55100 45600 10 line
55100 45600 55100 47000 10 line
55100 47000 53900 47000 10 line
53900 47000 53900 45600 10 line
grestore
gsave
false false false false 260.000000 [(U2) ] 0 54395 46200 180.555557 text
grestore
53700 46600 53000 46600 10 line
53000 46600 53000 46500 10 line
46900 47300 45200 47300 10 line
45200 47300 45200 46300 10 line
46900 47700 45800 47700 10 line
gsave
false false false false 260.000000 [(T_ALERT) ] 0 46000 47700 180.555557 text
grestore
53700 46000 52500 46000 10 line
gsave
false false false false 260.000000 [(T_ALERT) ] 0 52700 46000 180.555557 text
grestore
53700 45700 53500 45700 10 line
53500 45700 53500 45500 10 line
gsave
53500 45300 53500 45500 10 line
53400 45300 53600 45300 10 line
53455 45250 53545 45250 10 line
53480 45210 53520 45210 10 line
grestore
gsave
55500 45300 55500 45500 10 line
55400 45300 55600 45300 10 line
55455 45250 55545 45250 10 line
55480 45210 55520 45210 10 line
grestore
55500 45500 55500 46300 10 line
55500 45700 55300 45700 10 line
55500 46000 55300 46000 10 line
55500 46300 55300 46300 10 line
55300 46600 55500 46600 10 line
55500 46600 55500 49100 10 line
gsave
55500 49100 55500 49300 10 line
55350 49300 55650 49300 10 line
gsave
false false false false 208.000000 [(Vcc) ] 0 55375 49350 144.444443 text
grestore
grestore
gsave
51500 42500 51500 42700 10 line
51500 43400 51500 43200 10 line
51300 42900 51700 42900 10 line
51300 43000 51700 43000 10 line
51500 43200 51500 43000 10 line
51500 42900 51500 42700 10 line
grestore
gsave
false false false false 260.000000 [(CBP_TS) ] 90 51950 42550 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 90 52150 42550 180.555557 text
grestore
gsave
52500 42500 52500 42700 10 line
52500 43400 52500 43200 10 line
52300 42900 52700 42900 10 line
52300 43000 52700 43000 10 line
52500 43200 52500 43000 10 line
52500 42900 52500 42700 10 line
grestore
gsave
false false false false 260.000000 [(CBP_RS485) ] 90 52950 42550 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 90 53150 42550 180.555557 text
grestore
gsave
55500 42500 55500 42700 10 line
55500 43400 55500 43200 10 line
55300 42900 55700 42900 10 line
55300 43000 55700 43000 10 line
55500 43200 55500 43000 10 line
55500 42900 55500 42700 10 line
grestore
gsave
false false false false 260.000000 [(CBP_AVR1) ] 90 55950 42550 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 90 56150 42550 180.555557 text
grestore
gsave
54500 42500 54500 42700 10 line
54500 43400 54500 43200 10 line
54300 42900 54700 42900 10 line
54300 43000 54700 43000 10 line
54500 43200 54500 43000 10 line
54500 42900 54500 42700 10 line
grestore
gsave
false false false false 260.000000 [(CBP_AVR_AREF) ] 90 54950 42550 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 90 55150 42550 180.555557 text
grestore
gsave
53500 42500 53500 42700 10 line
53500 43400 53500 43200 10 line
53300 42900 53700 42900 10 line
53300 43000 53700 43000 10 line
53500 43200 53500 43000 10 line
53500 42900 53500 42700 10 line
grestore
gsave
false false false false 260.000000 [(CBP_AVR_AVCC) ] 90 53950 42550 180.555557 text
grestore
gsave
false false false false 260.000000 [(100nF) ] 90 54150 42550 180.555557 text
grestore
55500 42500 55500 42200 10 line
51200 42200 55500 42200 10 line
51500 42200 51500 42500 10 line
52500 42500 52500 42200 10 line
53500 42500 53500 42200 10 line
54500 42500 54500 42200 10 line
55500 43400 55500 43700 10 line
51200 43700 55500 43700 10 line
51500 43400 51500 43700 10 line
52500 43400 52500 43700 10 line
53500 43400 53500 43700 10 line
54500 43400 54500 43700 10 line
gsave
51200 43700 51000 43700 10 line
51000 43550 51000 43850 10 line
gsave
false false false false 208.000000 [(Vcc) ] 90 50950 43575 144.444443 text
grestore
grestore
gsave
51000 42200 51200 42200 10 line
51000 42300 51000 42100 10 line
50950 42245 50950 42155 10 line
50910 42220 50910 42180 10 line
grestore
gsave
52700 47800 52900 47700 10 line
52900 47700 52700 47600 10 line
52700 47600 52900 47500 10 line
52900 47500 52700 47400 10 line
52700 47800 52900 47900 10 line
52900 47900 52800 47950 10 line
52800 48100 52800 47950 10 line
52800 47200 52800 47352 10 line
52700 47401 52800 47350 10 line
grestore
gsave
false false false false 260.000000 [(RPU_SCL) ] 90 52400 47450 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 90 52600 47450 180.555557 text
grestore
gsave
51800 47800 52000 47700 10 line
52000 47700 51800 47600 10 line
51800 47600 52000 47500 10 line
52000 47500 51800 47400 10 line
51800 47800 52000 47900 10 line
52000 47900 51900 47950 10 line
51900 48100 51900 47950 10 line
51900 47200 51900 47352 10 line
51800 47401 51900 47350 10 line
grestore
gsave
false false false false 260.000000 [(RPU_SDA) ] 90 51500 47450 180.555557 text
grestore
gsave
false false false false 260.000000 [(10k) ] 90 51700 47450 180.555557 text
grestore
51900 47200 51900 46500 10 line
52800 47200 52800 46300 10 line
51900 48100 51900 48700 10 line
51900 48700 55500 48700 10 line
52800 48100 52800 48700 10 line
gsave
false false false false 260.000000 [(BYPASS CAPACITORS) ] 0 52400 44200 180.555557 text
grestore
gsave
false false false false 260.000000 [(TEMPERATURE SENSOR) ] 0 53100 47300 180.555557 text
grestore
gsave
false false false false 260.000000 [(3) ] 0 51500 40100 180.555557 text
grestore
newpath
50900 46300
25
0 360 arc
fill
newpath
52800 46300
25
0 360 arc
fill
newpath
50900 46500
25
0 360 arc
fill
newpath
51900 46500
25
0 360 arc
fill
newpath
50900 46500
25
0 360 arc
fill
newpath
50900 46500
25
0 360 arc
fill
newpath
50900 46300
25
0 360 arc
fill
newpath
50900 46300
25
0 360 arc
fill
newpath
49800 44800
25
0 360 arc
fill
newpath
49800 44800
25
0 360 arc
fill
newpath
49800 44800
25
0 360 arc
fill
60 60 41470 42670 fbox
newpath
40700 42300
25
0 360 arc
fill
newpath
40700 42300
25
0 360 arc
fill
60 60 41470 41870 fbox
60 60 41470 41470 fbox
newpath
40700 41100
25
0 360 arc
fill
newpath
40700 41100
25
0 360 arc
fill
60 60 50070 46070 fbox
newpath
40700 41100
25
0 360 arc
fill
newpath
40700 40700
25
0 360 arc
fill
newpath
40700 40700
25
0 360 arc
fill
newpath
40700 40700
25
0 360 arc
fill
newpath
40700 42300
25
0 360 arc
fill
60 60 45370 42670 fbox
60 60 45370 41070 fbox
60 60 45370 40670 fbox
60 60 45770 44570 fbox
60 60 45770 44370 fbox
60 60 45770 44770 fbox
newpath
44200 47500
25
0 360 arc
fill
newpath
44200 47500
25
0 360 arc
fill
newpath
44200 47500
25
0 360 arc
fill
newpath
44200 48400
25
0 360 arc
fill
newpath
44200 48400
25
0 360 arc
fill
newpath
41800 49000
25
0 360 arc
fill
newpath
41800 49000
25
0 360 arc
fill
newpath
41800 49000
25
0 360 arc
fill
60 60 40270 48070 fbox
newpath
41400 48100
25
0 360 arc
fill
60 60 40270 47770 fbox
newpath
41000 47800
25
0 360 arc
fill
newpath
41000 47800
25
0 360 arc
fill
newpath
41000 47800
25
0 360 arc
fill
newpath
41400 48100
25
0 360 arc
fill
newpath
41400 48100
25
0 360 arc
fill
60 60 45770 47670 fbox
60 60 52470 45970 fbox
newpath
55500 45700
25
0 360 arc
fill
newpath
55500 46000
25
0 360 arc
fill
newpath
55500 45700
25
0 360 arc
fill
newpath
55500 45700
25
0 360 arc
fill
newpath
55500 46000
25
0 360 arc
fill
newpath
55500 46000
25
0 360 arc
fill
newpath
55500 48700
25
0 360 arc
fill
newpath
51500 42200
25
0 360 arc
fill
newpath
52500 42200
25
0 360 arc
fill
newpath
53500 42200
25
0 360 arc
fill
newpath
54500 42200
25
0 360 arc
fill
newpath
51500 42200
25
0 360 arc
fill
newpath
51500 42200
25
0 360 arc
fill
newpath
52500 42200
25
0 360 arc
fill
newpath
52500 42200
25
0 360 arc
fill
newpath
53500 42200
25
0 360 arc
fill
newpath
53500 42200
25
0 360 arc
fill
newpath
54500 42200
25
0 360 arc
fill
newpath
54500 42200
25
0 360 arc
fill
newpath
51500 43700
25
0 360 arc
fill
newpath
52500 43700
25
0 360 arc
fill
newpath
53500 43700
25
0 360 arc
fill
newpath
54500 43700
25
0 360 arc
fill
newpath
51500 43700
25
0 360 arc
fill
newpath
51500 43700
25
0 360 arc
fill
newpath
52500 43700
25
0 360 arc
fill
newpath
52500 43700
25
0 360 arc
fill
newpath
53500 43700
25
0 360 arc
fill
newpath
53500 43700
25
0 360 arc
fill
newpath
54500 43700
25
0 360 arc
fill
newpath
54500 43700
25
0 360 arc
fill
newpath
51900 46500
25
0 360 arc
fill
newpath
51900 46500
25
0 360 arc
fill
newpath
52800 46300
25
0 360 arc
fill
newpath
52800 46300
25
0 360 arc
fill
newpath
55500 48700
25
0 360 arc
fill
newpath
55500 48700
25
0 360 arc
fill
newpath
52800 48700
25
0 360 arc
fill
newpath
52800 48700
25
0 360 arc
fill
newpath
52800 48700
25
0 360 arc
fill
showpage
%%End
